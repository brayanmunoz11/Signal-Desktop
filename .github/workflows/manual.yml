# Copyright 2020 Signal Messenger, LLC
# SPDX-License-Identifier: AGPL-3.0-only

name: CI-TEST
on:
  push:
    branches:
      - development
      - main
      - '[0-9]+.[0-9]+.x'
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - run: lsb_release -a
    - run: uname -a
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18.14.0'
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}

    - name: Restore cached .eslintcache and tsconfig.tsbuildinfo
      uses: actions/cache/restore@v3
      id: cache-lint
      with:
        path: |
          .eslintcache
          tsconfig.tsbuildinfo
        key: lint-${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**', '.eslintrc.js', '.eslint/**', 'tsconfig.json') }}

    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile
      env:
        NPM_CONFIG_LOGLEVEL: verbose

    - run: yarn generate
    - run: yarn lint
      if: false
    - run: yarn lint-deps
      if: false
    - run: yarn lint-license-comments
      if: false
    - run: git diff --exit-code

    - name: Update cached .eslintcache and tsconfig.tsbuildinfo
      uses: actions/cache/save@v3
      if: github.ref == 'refs/heads/main'
      with:
        path: |
          .eslintcache
          tsconfig.tsbuildinfo
        key: ${{ steps.cache-lint.outputs.cache-primary-key }}

  mock-tests:
      needs: lint
      runs-on: ubuntu-latest
      if: ${{ github.repository == 'signalapp/Signal-Desktop-Private' }}
      timeout-minutes: 30

      steps:
      - name: Get system specs
        run: lsb_release -a
      - name: Get other system specs
        run: uname -a

      - name: Clone Desktop repo
        uses: actions/checkout@v3

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.14.0'
      - name: Install global dependencies
        run: npm install -g yarn@1.22.10

      - name: Install xvfb
        run: sudo apt-get install xvfb

      - name: Cache Desktop node_modules
        id: cache-desktop-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}

      - name: Install Desktop node_modules
        if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        env:
          NPM_CONFIG_LOGLEVEL: verbose

      - name: Build typescript
        run: yarn generate
      - name: Bundle
        run: yarn build:esbuild:prod

      - name: Run mock server tests
        run: |
          set -o pipefail
          xvfb-run --auto-servernum yarn test-mock
        timeout-minutes: 10
        env:
          NODE_ENV: production
          DEBUG: mock:test:*
          ARTIFACTS_DIR: artifacts/startup

      - name: Upload mock server test logs on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: artifacts



